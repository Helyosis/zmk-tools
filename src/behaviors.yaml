# yaml-language-server: $schema=behaviors.schema.json

parameters:
  keycode: &keycode
    documentation: Key code
    label: KEYCODE
    type: keycode

  layer: &layer
    documentation: Layer index
    label: LAYER
    type: integer

  mouseButton: &mouseButton
    documentation: Mouse button
    label: BUTTON
    type: mouseButton

behaviors:
  bindings:
    # Key Press https://zmk.dev/docs/keymaps/behaviors/key-press
    - label: '&kp KEYCODE'
      documentation: |
        [Key press](https://zmk.dev/docs/keymaps/behaviors/key-press)

        Sends standard key codes on press/release.
      parameters:
        - *keycode

    # Key Toggle https://zmk.dev/docs/keymaps/behaviors/key-toggle
    - label: '&kt KEYCODE'
      documentation: |
        [Key toggle](https://zmk.dev/docs/keymaps/behaviors/key-toggle)

        Toggles whether a key is pressed.
      parameters:
        - *keycode

    # Layers https://zmk.dev/docs/keymaps/behaviors/layers
    - label: '&mo LAYER'
      documentation: |
        [Momentary layer](https://zmk.dev/docs/keymaps/behaviors/layers#momentary-layer)

        Switches to a layer while the key is held.
      parameters:
        - *layer

    - label: '&lt LAYER TAP'
      documentation: |
        [Layer-tap](https://zmk.dev/docs/keymaps/behaviors/layers#layer-tap)

        * **On hold:** switches to a layer
        * **On tap:** sends a keycode
      parameters:
        - label: LAYER
          type: integer
          documentation: Layer index to use when held
        - label: TAP
          type: keycode
          documentation: Key code to send when tapped

    - label: '&to'
      documentation: |
        [To layer](https://zmk.dev/docs/keymaps/behaviors/layers#to-layer)

        Enables a layer and disables all other layers except the default layer.
      parameters:
        - *layer

    - label: '&tog LAYER'
      documentation: |
        [Toggle layer](https://zmk.dev/docs/keymaps/behaviors/layers#toggle-layer)

        Toggles whether a layer is enabled.
      parameters:
        - *layer

    # Miscellaneous https://zmk.dev/docs/keymaps/behaviors/misc
    - label: '&trans'
      documentation: |
        [Transparent](https://zmk.dev/docs/keymaps/behaviors/misc#transparent)

        Passes key presses down to the next active layer in the stack.
        Does nothing if on the base layer.
      parameters: []

    - label: '&none'
      documentation: |
        [None](https://zmk.dev/docs/keymaps/behaviors/misc#none)

        Ignores a key press so it will *not* be passed down to the next active layer in the stack.
      parameters: []

    # Mod-Tap https://zmk.dev/docs/keymaps/behaviors/mod-tap
    - label: '&mt MODIFIER TAP'
      documentation: |
        [Mod-tap](https://zmk.dev/docs/keymaps/behaviors/mod-tap)

        * **On hold:** holds a modifier
        * **On tap:** sends a keycode
      parameters:
        - label: MODIFIER
          documentation: Modifier to send when held
          type: modifier
        - label: TAP
          documentation: Key code to send when tapped
          type: keycode

    # Mod-Morph https://zmk.dev/docs/keymaps/behaviors/mod-morph
    - label: '&gresc'
      documentation: |
        [Grave escape](https://zmk.dev/docs/keymaps/behaviors/mod-morph)

        Sends `&kp ESCAPE` normally or `&kp GRAVE` when either Shift or GUI modifiers are held.
      parameters: []

      # Sticky Key https://zmk.dev/docs/keymaps/behaviors/sticky-key
    - label: '&sk KEYCODE'
      documentation: |
        [Sticky key](https://zmk.dev/docs/keymaps/behaviors/sticky-key)

        Sends a key and keeps it pressed until another key is pressed.
      parameters:
        - *keycode

    # Sticky Layer https://zmk.dev/docs/keymaps/behaviors/sticky-layer
    - label: '&sl LAYER'
      documentation: |
        [Sticky layer](https://zmk.dev/docs/keymaps/behaviors/sticky-layer)

        Activates a layer until another key is pressed.
      parameters:
        - *layer

    # Caps Word https://zmk.dev/docs/keymaps/behaviors/caps-word
    - label: '&caps_word'
      documentation: |
        [Caps word](https://zmk.dev/docs/keymaps/behaviors/caps-word)

        Acts like caps lock but automatically deactivates when a "break" key is pressed.
      parameters: []

    # Key Repeat https://zmk.dev/docs/keymaps/behaviors/key-repeat
    - label: '&key_repeat'
      documentation: |
        [Key repeat](https://zmk.dev/docs/keymaps/behaviors/key-repeat)

        Sends whatever key code was last sent.
      parameters: []

    # Reset https://zmk.dev/docs/keymaps/behaviors/reset
    - label: '&sys_reset'
      documentation: |
        [Reset](https://zmk.dev/docs/keymaps/behaviors/reset#reset)

        Resets the keyboard and restarts its firmware.
      parameters: []

    - label: '&bootloader'
      documentation: |
        [Bootloader reset](https://zmk.dev/docs/keymaps/behaviors/reset#bootloader-reset)

        Resets the keyboard and puts it into bootloader mode, allowing you to flash new firmware.
      parameters: []

    # Bluetooth https://zmk.dev/docs/keymaps/behaviors/bluetooth
    - label: '&bt ACTION'
      documentation: |
        [Bluetooth command](https://zmk.dev/docs/keymaps/behaviors/bluetooth)
      if:
        - paramsNot: [BT_SEL]
        - paramsNot: [BT_DISC]
      parameters:
        - label: ACTION
          include: dt-bindings/zmk/bt.h
          type:
            - label: BT_CLR
              documentation: Clear bond information between the keyboard and host for the selected profile.
            - label: BT_NXT
              documentation: Switch to the next profile, cycling through to the first one when the end is reached.
            - label: BT_PRV
              documentation: Switch to the previous profile, cycling through to the last one when the beginning is reached.
            - label: BT_SEL
              documentation: Select the 0-indexed profile by number.
            - label: BT_DISC
              documentation: Disconnect from the 0-indexed profile by number, if it's currently connected and inactive.

    - label: '&bt BT_SEL PROFILE'
      documentation: |
        [Bluetooth command](https://zmk.dev/docs/keymaps/behaviors/bluetooth)

        Select the 0-indexed profile by number.
      if:
        params: [BT_SEL]
      parameters:
        - label: BT_SEL
          include: dt-bindings/zmk/bt.h
          type:
            - label: BT_SEL
              documentation: Selects the 0-indexed profile by number.
        - label: PROFILE
          documentation: 0-based index of the profile to select.
          type: integer

    - label: '&bt BT_DISC PROFILE'
      documentation: |
        [Bluetooth command](https://zmk.dev/docs/keymaps/behaviors/bluetooth)

        Disconnect from the 0-indexed profile by number, if it's currently connected and inactive.
      if:
        params: [BT_DISC]
      parameters:
        - label: BT_DISC
          include: dt-bindings/zmk/bt.h
          type:
            - label: BT_DISC
              documentation: Disconnect from the 0-indexed profile by number, if it's currently connected and inactive.
        - label: PROFILE
          documentation: 0-based index of the profile from which to disconnect.
          type: integer

    # Output Selection https://zmk.dev/docs/keymaps/behaviors/outputs
    - label: '&out ACTION'
      documentation: |
        [Output selection command](https://zmk.dev/docs/keymaps/behaviors/outputs)
      parameters:
        - label: ACTION
          include: dt-bindings/zmk/outputs.h
          type:
            - label: OUT_USB
              documentation: Prefer sending to USB.
            - label: OUT_BLE
              documentation: Prefer sending to the current bluetooth profile.
            - label: OUT_TOG
              documentation: Toggle between USB and BLE.

    # RGB Underglow https://zmk.dev/docs/keymaps/behaviors/underglow
    - label: '&rgb_ug ACTION'
      documentation: |
        [RGB underglow command](https://zmk.dev/docs/keymaps/behaviors/lighting#rgb-underglow)
      parameters:
        - label: ACTION
          include: dt-bindings/zmk/rgb.h
          type:
            - label: RGB_TOG
              documentation: Toggles the RGB feature on and off.
            - label: RGB_HUI
              documentation: Increases the hue of the RGB feature.
            - label: RGB_HUD
              documentation: Decreases the hue of the RGB feature.
            - label: RGB_SAI
              documentation: Increases the saturation of the RGB feature.
            - label: RGB_SAD
              documentation: Decreases the saturation of the RGB feature. ðŸ˜¢
            - label: RGB_BRI
              documentation: Increases the brightness of the RGB feature.
            - label: RGB_BRD
              documentation: Decreases the brightness of the RGB feature.
            - label: RGB_SPI
              documentation: Increases the speed of the RGB feature effect's animation.
            - label: RGB_SPD
              documentation: Decreases the speed of the RGB feature effect's animation.
            - label: RGB_EFF
              documentation: Cycles the RGB feature's effect forwards.
            - label: RGB_EFR
              documentation: Cycles the RGB feature's effect reverse.

    # Backlight https://zmk.dev/docs/keymaps/behaviors/backlight
    - label: '&bl ACTION'
      documentation: |
        [Backlight command](https://zmk.dev/docs/keymaps/behaviors/backlight)
      if:
        paramsNot: [BL_SET]
      parameters:
        - label: ACTION
          include: dt-bindings/zmk/backlight.h
          type:
            - label: BL_ON
              documentation: Turn on backlight
            - label: BL_OFF
              documentation: Turn off backlight
            - label: BL_TOG
              documentation: Toggle backlight on and off
            - label: BL_INC
              documentation: Increase brightness
            - label: BL_DEC
              documentation: Decrease brightness
            - label: BL_CYCLE
              documentation: Cycle brightness
            - label: BL_SET
              documentation: Set a specific brightness

    - label: '&bl BL_SET BRIGHTNESS'
      documentation: |
        [Backlight command](https://zmk.dev/docs/keymaps/behaviors/backlight)

        Set backlight brightness
      if:
        params: [BL_SET]
      parameters:
        - label: BL_SET
          include: dt-bindings/zmk/backlight.h
          type:
            - label: BL_SET
              documentation: Set a specific brightness
        - label: BRIGHTNESS
          documentation: Brightness as a percentage
          type: integer

    # Power Management https://zmk.dev/docs/keymaps/behaviors/power
    - label: '&ext_power ACTION'
      documentation: |
        [External power control](https://zmk.dev/docs/keymaps/behaviors/power#external-power-control)
      parameters:
        - label: ACTION
          include: dt-bindings/zmk/ext_power.h
          type:
            - label: EP_OFF
              documentation: Disable the external power.
            - label: EP_ON
              documentation: Enable the external power.
            - label: EP_TOG
              documentation: Toggle the external power on/off.

    # Mouse Button Press https://zmk.dev/docs/keymaps/behaviors/mouse-emulation
    - label: '&mkp BUTTON'
      documentation: |
        [Mouse button press](https://zmk.dev/docs/keymaps/behaviors/mouse-emulation#mouse-button-press)

        Sends a mouse button press.
      parameters:
        - *mouseButton

    # Soft Off https://zmk.dev/docs/keymaps/behaviors/soft-off
    - label: '&soft_off'
      documentation: |
        [Soft Off](https://zmk.dev/docs/keymaps/behaviors/soft-off)

        Puts the keyboard into an off state. It can be turned back on with the reset button,
        or on specific keyboards, with a dedicated on button.
      parameters: []

    # ZMK Studio Unlock https://zmk.dev/docs/keymaps/behaviors/studio-unlock
    - label: '&studio_unlock'
      documentation: |
        [ZMK Studio Unlock](https://zmk.dev/docs/keymaps/behaviors/studio-unlock)

        Grants [ZMK Studio](https://zmk.dev/docs/features/studio) access to make changes to the keyboard.
      parameters: []

  sensor-bindings:
    # Encoder
    - label: '&inc_dec_kp CW_KEY CCW_KEY'
      documentation: |
        [Encoder key press](https://zmk.dev/docs/features/encoders)

        Sends keycodes when rotating an encoder.
      parameters:
        - label: CW_KEY
          documentation: Keycode to send when the encoder is rotated clockwise.
          type: keycode
        - label: CCW_KEY
          documentation: Keycode to send when the encoder is rotated counter-clockwise.
          type: keycode

macroBehaviors:
  # https://zmk.dev/docs/keymaps/behaviors/macros
  bindings:
    - label: '&macro_tap'
      documentation: |
        [Tap mode](https://zmk.dev/docs/keymaps/behaviors/macros#binding-activation-mode)

        Switch the macro to key tap mode
      parameters: []

    - label: '&macro_press'
      documentation: |
        [Press mode](https://zmk.dev/docs/keymaps/behaviors/macros#binding-activation-mode)

        Switch the macro to key press mode
      parameters: []

    - label: '&macro_release'
      documentation: |
        [Release mode](https://zmk.dev/docs/keymaps/behaviors/macros#binding-activation-mode)

        Switch the macro to key release mode
      parameters: []

    - label: '&macro_tap_time TAP_MS'
      documentation: |
        [Tap time](https://zmk.dev/docs/keymaps/behaviors/macros#tap-time)

        Change the duration of taps when in tap mode
      parameters:
        - label: TAP_MS
          documentation: Tap duration in milliseconds
          type: integer

    - label: '&macro_wait_time WAIT_MS'
      documentation: |
        [Wait time](https://zmk.dev/docs/keymaps/behaviors/macros#wait-time)

        Change the time to wait between bindings
      parameters:
        - label: WAIT_MS
          documentation: Delay in milliseconds
          type: integer

    - label: '&macro_pause_for_release'
      documentation: |
        [Pause for release](https://zmk.dev/docs/keymaps/behaviors/macros#processing-continuation-on-release)

        Pause the macro until the key that triggered the macro is released
      parameters: []
